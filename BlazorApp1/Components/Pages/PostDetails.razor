@page "/post/{id:int}"
@using BlazorApp1.Services
@using DTOs
@inject IPostService postService
@inject ICommentService commentService
@inject NavigationManager NavigationManager

<PageTitle>Post Details</PageTitle>

@if (postToDisplay == null)
{
    <p>Could not load post details. Please check if the post exists.</p>
}
else
{
    <div class="post-details">
        <h1>@postToDisplay.Title</h1>
        <p>@postToDisplay.Content</p>
        <small>Posted on @postToDisplay.Date by User @postToDisplay.UserId</small>
    </div>

    <h2>Comments</h2>
    
    @if (comments == null || comments.Count == 0)
    {
        <p>No comments available for this post.</p>
    }
    else
    {
        @foreach (var comment in comments)
        {
            <p>User @comment.UserId said @comment.Content</p>
        }
    }
    
    <h3>Add a Comment</h3>
    <div>
        <textarea @bind="newCommentContent" placeholder="Enter your comment"></textarea>
    </div>
    <div>
        <button class="btn btn-primary" @onclick="() => AddComment(postToDisplay.Id)">Add Comment</button>
    </div>
    <button @onclick="GoBack">Back to Posts</button>
}

@code {
    [Parameter]
    public int id { get; set; }

    private PostDTO postToDisplay;
    private List<CreateCommentDTO>? comments;
    private string newCommentContent = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        postToDisplay = await postService.GetAsync(id);
        comments = await commentService.GetCommentsAsync(id);
    }

    public async Task AddComment(int postId)
    {
        await commentService.AddCommentAsync(new CreateCommentDTO()
        {
            Content = newCommentContent,
            PostId = postId
        });
        
        comments = await commentService.GetCommentsAsync(id);
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }
}
