@page "/publish-post"
@using BlazorApp1.Services
@using DTOs
@inject IPostService postService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@attribute [StreamRendering]

<PageTitle>Publish Post</PageTitle>

<h1>Publish a post</h1>

<AuthorizeView>
    <Authorized>
        <!-- Form to publish post only visible to authorized users -->
        <div>
            <label>Title</label>
            <input @bind="title" placeholder="Enter title" />
        </div>

        <div>
            <label>Content</label>
            <input @bind="content" placeholder="Enter content" />
        </div>

        <div>
            <button class="btn btn-primary" @onclick="publishPost">Add</button>
        </div>
    </Authorized>

    <NotAuthorized>
        <!-- Message shown to unauthorized users -->
        <p>You need to log in to publish a post!</p>
        <button @onclick='() => NavigationManager.NavigateTo("login")'>Go to Login</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string title;
    private string content;

    private async Task publishPost()
    {
        try
        {
            var post = new CreatePostDTO()
            {
                Title = title,
                Content = content,
                // Here you may want to assign UserId based on the logged-in user.
                UserId = 1
            };

            await postService.AddPostAsync(post);

            Console.WriteLine("Post added successfully!");
                
            title = string.Empty;
            content = string.Empty;
                
            await JSRuntime.InvokeVoidAsync("alert", "Post added successfully!");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception occurred: {ex.Message}");
        }
    }
}