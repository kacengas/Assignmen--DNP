@page "/add-user"
@using Entities
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Add User</PageTitle>

<h1>Add User</h1>

<AuthorizeView>
    <Authorized>
        <!-- Form to add user only visible to authorized users -->
        <div>
            <label>Username</label>
            <input @bind="username" placeholder="Enter username" />
        </div>

        <div>
            <label>Password</label>
            <input type="password" @bind="password" placeholder="Enter password"/>
        </div>

        <div>
            <button class="btn btn-primary" @onclick="addUser">Add</button>    
        </div>
    </Authorized>

    <NotAuthorized>
        <!-- Message shown to unauthorized users -->
        <p>You need to log in to add a new user!</p>
        <button @onclick='() => NavigationManager.NavigateTo("login")'>Go to Login</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string username;
    private string password;

    private async Task addUser()
    {
        try
        {
            var user = new User(username, password);

            await Http.PostAsJsonAsync("/user", user);
            
            username = string.Empty;
            password = string.Empty;
                
            await JSRuntime.InvokeVoidAsync("alert", "User added successfully!");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception occurred: {ex.Message}");
        }
    }
}